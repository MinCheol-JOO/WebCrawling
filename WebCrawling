{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"WebCrawling","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNaymq6cwT/iDOOq8XjZUrl"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"ipl17BTHeSR4"},"source":["네이버 api를 사용한 crawling\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ODxlax3GWFmi","executionInfo":{"status":"ok","timestamp":1625901324316,"user_tz":-540,"elapsed":18090,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"9bb505e0-e9ef-45a9-ebd7-71a82ce3db64"},"source":["import os\n","import sys\n","import urllib.request\n","import datetime\n","import time\n","import json\n","\n","client_id = 'vcmy2L3pt6MO4c_32Dyo'\n","client_secret = 'XZAxQfXXX7'\n","\n","\n","#[CODE 1]\n","def getRequestUrl(url):    \n","    req = urllib.request.Request(url)\n","    req.add_header(\"X-Naver-Client-Id\", client_id)\n","    req.add_header(\"X-Naver-Client-Secret\", client_secret)\n","    \n","    try: \n","        response = urllib.request.urlopen(req)\n","        if response.getcode() == 200:\n","            print (\"[%s] Url Request Success\" % datetime.datetime.now())\n","            return response.read().decode('utf-8')\n","    except Exception as e:\n","        print(e)\n","        print(\"[%s] Error for URL : %s\" % (datetime.datetime.now(), url))\n","        return None\n","\n","#[CODE 2]\n","def getNaverSearch(node, srcText, start, display):    \n","    base = \"https://openapi.naver.com/v1/search\"\n","    node = \"/%s.json\" % node\n","    parameters = \"?query=%s&start=%s&display=%s\" % (urllib.parse.quote(srcText), start, display)\n","    \n","    url = base + node + parameters    \n","    responseDecode = getRequestUrl(url)   #[CODE 1]\n","    \n","    if (responseDecode == None):\n","        return None\n","    else:\n","        return json.loads(responseDecode)\n","\n","#[CODE 3]\n","def getPostData(post, jsonResult, cnt):    \n","    title = post['title']\n","    description = post['description']\n","    org_link = post['originallink']\n","    link = post['link']\n","    \n","    pDate = datetime.datetime.strptime(post['pubDate'],  '%a, %d %b %Y %H:%M:%S +0900')\n","    pDate = pDate.strftime('%Y-%m-%d %H:%M:%S')\n","    \n","    jsonResult.append({'cnt':cnt, 'title':title, 'description': description, \n","'org_link':org_link,   'link': org_link,   'pDate':pDate})\n","    return    \n","\n","#[CODE 0]\n","def main():\n","    node = 'news'   # 크롤링 할 대상\n","    srcText = input('검색어를 입력하세요: ')\n","    cnt = 0\n","    jsonResult = []\n","\n","    jsonResponse = getNaverSearch(node, srcText, 1, 100)  #[CODE 2]\n","    total = jsonResponse['total']\n"," \n","    while ((jsonResponse != None) and (jsonResponse['display'] != 0)):         \n","        for post in jsonResponse['items']:\n","            cnt += 1\n","            getPostData(post, jsonResult, cnt)  #[CODE 3]       \n","        \n","        start = jsonResponse['start'] + jsonResponse['display']\n","        jsonResponse = getNaverSearch(node, srcText, start, 100)  #[CODE 2]\n","       \n","    print('전체 검색 : %d 건' %total)\n","    \n","    with open('%s_naver_%s.json' % (srcText, node), 'w', encoding='utf8') as outfile:\n","        jsonFile = json.dumps(jsonResult,  indent=4, sort_keys=True,  ensure_ascii=False)\n","                        \n","        outfile.write(jsonFile)\n","        \n","    print(\"가져온 데이터 : %d 건\" %(cnt))\n","    print ('%s_naver_%s.json SAVED' % (srcText, node))\n","    \n","if __name__ == '__main__':\n","    main()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["검색어를 입력하세요: 이준석\n","[2021-07-10 07:15:11.687364] Url Request Success\n","[2021-07-10 07:15:12.912621] Url Request Success\n","[2021-07-10 07:15:14.135028] Url Request Success\n","[2021-07-10 07:15:15.349213] Url Request Success\n","[2021-07-10 07:15:16.619761] Url Request Success\n","[2021-07-10 07:15:17.858939] Url Request Success\n","[2021-07-10 07:15:19.154963] Url Request Success\n","[2021-07-10 07:15:20.452735] Url Request Success\n","[2021-07-10 07:15:21.909373] Url Request Success\n","[2021-07-10 07:15:23.194886] Url Request Success\n","HTTP Error 400: Bad Request\n","[2021-07-10 07:15:24.155090] Error for URL : https://openapi.naver.com/v1/search/news.json?query=%EC%9D%B4%EC%A4%80%EC%84%9D&start=1001&display=100\n","전체 검색 : 120809 건\n","가져온 데이터 : 1000 건\n","이준석_naver_news.json SAVED\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"8M5zBb9heapc"},"source":["셀리니움 설치"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ddze7ARVf5l3","executionInfo":{"status":"ok","timestamp":1625900752547,"user_tz":-540,"elapsed":40667,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"01be178f-d2d6-41f9-acdf-77faf65a13f5"},"source":["!pip install selenium\n","!apt-get update\n","!apt install chromium-chromedriver\n","\n","from selenium import webdriver\n","from urllib.request import urlopen\n","from bs4 import BeautifulSoup as bs\n","from urllib.parse import quote_plus\n","from selenium.webdriver.common.keys import Keys\n","import time\n","\n","url = 'https://search.naver.com/search.naver?where=image&sm=tab_jum&query='\n","kword = input('검색어를 입력하세요 : ')\n","base_url = url + quote_plus(kword)\n","base_url\n","\n","chrome_options = webdriver.ChromeOptions()\n","chrome_options.add_argument('--headless')\n","chrome_options.add_argument('--no-sandbox')\n","chrome_options.add_argument('--disable-dev-shm-usage')\n","driver = webdriver.Chrome('chromedriver', chrome_options=chrome_options)\n","driver.get(base_url)\n","\n","body = driver.find_element_by_css_selector('body')\n","\n","# 페이지 다운시켜서 더 많은 이미지가 나오게 한다\n","for i in range(20):\n","    body.send_keys(Keys.PAGE_DOWN)\n","    time.sleep(1)\n","\n","imgs = driver.find_elements_by_css_selector('img._img')\n","\n","for idx, img in enumerate(imgs):\n","    # print(idx,img.get_attribute('src'))\n","    imgUrl = img.get_attribute('src')\n","    imgName = '/content/drive/My Drive/Colab Notebooks/crawling/'+kword + str(idx)+'.jpg'\n","    urllib.request.urlretrieve(imgUrl, imgName)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: selenium in /usr/local/lib/python3.7/dist-packages (3.141.0)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.7/dist-packages (from selenium) (1.24.3)\n","Get:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\n","Hit:2 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease\n","Ign:3 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","Hit:4 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Hit:5 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease\n","Ign:6 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Hit:7 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release\n","Hit:8 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","Get:9 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\n","Hit:10 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Hit:11 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease\n","Get:12 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\n","Hit:13 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease\n","Get:16 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2,658 kB]\n","Fetched 2,910 kB in 3s (1,143 kB/s)\n","Reading package lists... Done\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","chromium-chromedriver is already the newest version (91.0.4472.101-0ubuntu0.18.04.1).\n","0 upgraded, 0 newly installed, 0 to remove and 58 not upgraded.\n","검색어를 입력하세요 : h\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:21: DeprecationWarning: use options instead of chrome_options\n"],"name":"stderr"}]}]}